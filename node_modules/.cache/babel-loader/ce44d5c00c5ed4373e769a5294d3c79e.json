{"ast":null,"code":"import \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport _classCallCheck from \"/home/ameer/Desktop/xDemic-transcript/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ameer/Desktop/xDemic-transcript/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ameer/Desktop/xDemic-transcript/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ameer/Desktop/xDemic-transcript/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ameer/Desktop/xDemic-transcript/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ameer/Desktop/xDemic-transcript/src/components/Form.js\";\nimport React from 'react';\nimport Swal from 'sweetalert2';\n\nvar Login =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values);\n\n          if (values.password == '95942') {\n            _message.success('login succeed');\n\n            _this.props.history.push('/home');\n          } else {\n            _message.warn('Code not matched');\n          }\n        }\n      });\n    };\n\n    _this.state = {\n      name: 'hamza',\n      code: '95942'\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(\"div\", {\n        style: {\n          marginTop: 200\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(_Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(_Col, {\n        span: 16,\n        offset: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(_Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(_Form, {\n        onSubmit: this.handleSubmit,\n        className: \"login-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(_Form.Item, {\n        label: \"Student Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, getFieldDecorator('username', {\n        rules: [{\n          message: 'Please input your username!'\n        }]\n      })(React.createElement(_Input, {\n        prefix: React.createElement(_Icon, {\n          type: \"user\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }),\n        placeholder: this.state.name,\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }))), React.createElement(_Form.Item, {\n        label: \"Enter Code\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please enter code!'\n        }]\n      })(React.createElement(_Input, {\n        prefix: React.createElement(_Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"enter code of 5 digits\",\n        value: this.state.code,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }))), React.createElement(_Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        block: true,\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"login-form-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Log in\")))))));\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nvar LoginForm = _Form.create()(Login);\n\nexport default LoginForm;","map":{"version":3,"sources":["/home/ameer/Desktop/xDemic-transcript/src/components/Form.js"],"names":["React","Swal","Login","props","handleSubmit","e","preventDefault","form","validateFields","err","values","console","log","password","success","history","push","warn","state","name","code","getFieldDecorator","marginTop","rules","message","color","required","Component","LoginForm","create"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, Form, Icon, Input, Button, Checkbox, Row, Col, message } from \"antd\";\nimport Swal from 'sweetalert2'\n\nclass Login extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: 'hamza',\n            code: '95942'\n        }\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n                if(values.password == '95942') {\n                    message.success('login succeed');\n                    this.props.history.push('/home');\n                } else {\n                    message.warn('Code not matched');\n                }\n            }\n        });\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <div style={{ marginTop: 200 }}>\n                <Row>\n                    <Col span={16} offset={4}>\n\n                        <Card>\n                            <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                                <Form.Item label=\"Student Name\">\n                                    {getFieldDecorator('username', {\n                                        rules: [{ message: 'Please input your username!' }],\n                                    })(\n                                        <Input\n                                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                            placeholder={this.state.name}\n                                            disabled\n                                        />,\n                                    )}\n                                </Form.Item>\n                                <Form.Item label=\"Enter Code\">\n                                    {getFieldDecorator('password', {\n                                        rules: [{ required: true, message: 'Please enter code!' }],\n                                    })(\n                                        <Input\n                                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                            type=\"password\"\n                                            placeholder=\"enter code of 5 digits\"\n                                            value={this.state.code}\n                                        />,\n                                    )}\n                                </Form.Item>\n                                <Form.Item>\n                                    <Button block type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                                        Log in\n                                </Button>\n                        \n                                </Form.Item>\n                            </Form>\n\n                        </Card>\n\n                    </Col>\n                </Row>\n\n            </div>\n        )\n    }\n}\nconst LoginForm = Form.create()(Login);\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}
{"version":3,"sources":["components/Form.js","components/helper/Header.js","components/helper/ProfileCard.js","components/helper/PageTopCard.js","components/helper/StudentsTable.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","preventDefault","form","validateFields","err","values","console","log","password","message","success","history","push","warn","state","name","code","getFieldDecorator","react_default","a","createElement","style","marginTop","row","col","span","offset","card","es_form","onSubmit","className","Item","label","rules","input","prefix","icon","type","color","placeholder","disabled","required","value","es_button","block","htmlType","React","Component","LoginForm","create","Header","title","page_header","subTitle","Meta","ProfileCard","reactNode","width","actions","tooltip","arrowPointAtCenter","key","avatar","src","description","TabPane","extraContent","Content","_ref","children","extra","PageTopCard","footer","tabs","tab","PageTopCard_Content","arguments","length","undefined","descriptions","size","href","tyoe","renderContent","bordered","columns","dataIndex","render","text","tags","map","tag","es_tag","toUpperCase","data","courseDetail","status","creditHours","percentage","grade","Studenttable","table","dataSource","pagination","Home","Footer","helper_Header","helper_PageTopCard","StudentsTable","helper_ProfileCard","App","react_router_dom","react_router","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5aa552c2.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, Form, Icon, Input, Button, Checkbox, Row, Col, message } from \"antd\";\nimport Swal from 'sweetalert2'\n\nclass Login extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: 'hamza',\n            code: '95942'\n        }\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n                if(values.password == '95942') {\n                    message.success('login succeed');\n                    this.props.history.push('/home');\n                } else {\n                    message.warn('Code not matched');\n                }\n            }\n        });\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <div style={{ marginTop: 200 }}>\n                <Row>\n                    <Col span={16} offset={4}>\n\n                        <Card>\n                            <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                                <Form.Item label=\"Student Name\">\n                                    {getFieldDecorator('username', {\n                                        rules: [{ message: 'Please input your username!' }],\n                                    })(\n                                        <Input\n                                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                            placeholder={this.state.name}\n                                            disabled\n                                        />,\n                                    )}\n                                </Form.Item>\n                                <Form.Item label=\"Enter Code\">\n                                    {getFieldDecorator('password', {\n                                        rules: [{ required: true, message: 'Please enter code!' }],\n                                    })(\n                                        <Input\n                                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                            type=\"password\"\n                                            placeholder=\"enter code of 5 digits\"\n                                            value={this.state.code}\n                                        />,\n                                    )}\n                                </Form.Item>\n                                <Form.Item>\n                                    <Button block type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                                        Log in\n                                </Button>\n                        \n                                </Form.Item>\n                            </Form>\n\n                        </Card>\n\n                    </Col>\n                </Row>\n\n            </div>\n        )\n    }\n}\nconst LoginForm = Form.create()(Login);\n\nexport default LoginForm;","import React from 'react'\nimport { PageHeader, Col, Row } from 'antd';\n\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    title = <h1> Transcript </h1>\n\n    render() {\n        return (\n            <div>\n                <Row>\n                    <Col span={6} offset={4}>\n                    <PageHeader title={this.title} subTitle=\"of student hamza ikram\" />\n                    </Col>\n                </Row>\n\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Card, Icon, Avatar, Tooltip } from 'antd';\n\nconst { Meta } = Card;\n\nclass ProfileCard extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    reactNode = <div> <li> did:ethr:0xd88052df067cf3633fdc0e284ab087d654dae9c7 </li>\n        <li> <h3> Graduation </h3> </li>\n        <li> <h4> June 2020 </h4> </li> </div>;\n\n    render() {\n        return (\n            <div>\n                <Card\n                    style={{ width: 520 }}\n                    actions={[\n                        <Tooltip title=\"Phone Number\" arrowPointAtCenter>\n                            <Icon type=\"phone\" key=\"phone\"></Icon>\n                        </Tooltip>,\n                        ,\n                        <Tooltip title=\"Hamza Ikram\" arrowPointAtCenter>\n                            <Icon type=\"user\" key=\"user\"></Icon>\n                        </Tooltip>,\n                        <Tooltip title=\"Male\" arrowPointAtCenter>\n                            <Icon type=\"smile\" key=\"smile\"></Icon>\n                        </Tooltip>\n                    ]}\n                >\n                    <Meta\n                        avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\n                        title=\"Hamza Ikram\"\n                        description={this.reactNode}\n                    />\n                </Card>,\n            </div>\n        )\n    }\n}\n\nexport default ProfileCard;\n\n","import React from 'react';\nimport { PageHeader, Tabs, Button, Statistic, Descriptions, Icon, Card } from 'antd';\n\nconst { TabPane } = Tabs;\n\n\n\nconst renderContent = (column = 2) => (\n    <Descriptions size=\"small\">\n        <Descriptions.Item label=\"Email\"> <a href=\"#\"> roots@gmail.com  </a></Descriptions.Item>\n        <Descriptions.Item label=\"Website\"> <a href=\"#\"> www.roots.com </a> </Descriptions.Item>\n        <Descriptions.Item label=\"Address\"> <Icon tyoe=\"address\" /> <a href=\"#\"> 0x250bF185Ad0938258758A1360BBb118fc323c817 </a></Descriptions.Item>\n    </Descriptions>\n);\n\nconst extraContent = (\n    <div\n    >\n    </div>\n);\n\nconst Content = ({ children, extra }) => {\n    return (\n        <div className=\"content\">\n            <div className=\"main\">{children}</div>\n            <div className=\"extra\">{extra}</div>\n        </div>\n    );\n};\n\n\nclass PageTopCard extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <PageHeader\n                        title=\"Roots\"\n                        subTitle=\"Roots School E11/4 Islamabad\"\n                        footer={\n                            <Tabs>\n                                <TabPane tab=\"\" key=\"1\" />\n                                <TabPane tab=\"\" key=\"2\" />\n                            </Tabs>\n                        }\n                    >\n                        <Content extra={extraContent}>{renderContent()}</Content>\n                    </PageHeader>\n                </div>\n\n                <div>\n                    <Card title=\"K -12\" bordered={false}>\n                        <h4> Description </h4>\n                        <p>\n                            ISB is an extraordinary school, made so by a tradition of educational excellence spanning almost 40 years.\n                            <br />\n                            Establishing, nurturing and growing such an exceptional learning community has been and remains intentional.\n                            <br />\n                            We work hard to build strong relationships so our learning is at its best.\n                            <br />\n                            <br />\n                            The foundations of our school are our aspirational Mission, Vision and Core Values, These are brought to life \n                            <br />\n                            and made meaningful by passionate, hight experienced and well-qualified teachers and leaders\n                        </p>\n                    </Card>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PageTopCard;\n","import React from 'react';\nimport { Table, Divider, Tag, Card } from 'antd';\n\nconst columns = [\n    {\n        title: 'Course Code',\n        dataIndex: 'code',\n        key: 'name',\n        render: text => <a>{text}</a>,\n    },\n    {\n        title: 'Course Name',\n        dataIndex: 'name',\n        key: 'age',\n    },\n    {\n        title: 'Link to Course Details',\n        dataIndex: 'courseDetail',\n        key: 'address',\n        render: () => <a href=\"https://xdemic-api.herokuapp.com/httpcourse\"> Course Link </a>\n    },\n    {\n        title: 'Status',\n        key: 'tags',\n        dataIndex: 'status',\n        render: tags => (\n            <span>\n                {tags.map(tag => {\n                    let color = tag.length > 5 ? 'geekblue' : 'green';\n                    if (tag === 'loser') {\n                        color = 'volcano';\n                    }\n                    return (\n                        <Tag color={color} key={tag}>\n                            {tag.toUpperCase()}\n                        </Tag>\n                    );\n                })}\n            </span>\n        ),\n    },\n    {\n        title: 'Credit Hours',\n        key: 'action',\n        dataIndex: 'creditHours'\n    },\n    {\n        title: 'Percentage',\n        dataIndex: 'percentage',\n        key: 'address',\n    },\n    {\n        title: 'Grade',\n        dataIndex: 'grade',\n        key: 'address',\n    },\n];\n\nconst data = [\n    {\n        key: '1',\n        code: '1234561',\n        name: 'Physics 101',\n        courseDetail: '123123123132',\n        status: ['complete'],\n        creditHours: '2.0',\n        percentage: '85 %',\n        grade: 'C'\n    }\n];\n\n\nclass Studenttable extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div style={{ marginTop: 20 }}>\n                <Card>\n                    <Table columns={columns} dataSource={data} title={() => 'Spring 2019'} pagination={false} bordered={true}/>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default Studenttable;","import React from 'react';\nimport Header from \"./helper/Header\";\nimport ProfileCard from './helper/ProfileCard';\nimport PageTop from './helper/PageTopCard';\nimport StudentTable from './helper/StudentsTable';\nimport { Row, Col, Card, Layout } from \"antd\";\n\nconst { Footer } = Layout;\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>\n\n\n                <div>\n                    <Header />\n                </div>\n\n                <div>\n                    <Row>\n                        <Col span={12} offset={2}>\n                            <Card>\n                                <PageTop />\n                            </Card>\n\n                            <StudentTable />\n                        </Col>\n\n                        <Col span={5} offset={2} >\n\n                            <ProfileCard />\n\n                        </Col>\n\n                    </Row>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport LoginForm from '../src/components/Form';\nimport Home from \"../src/components/Home\";\n\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {}\n  }\n\n  render() {\n    return (\n\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\" exact component={LoginForm} />\n          <Route path=\"/home\" component={Home} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}